#summary Selectors used in each component

= Introduction =

This is a set of tables describing how selectors are implemented in the project

= Details =

The table conventions are these:

  * *Component*: Reference the component name in a jsp or jspx file.
  * *Selector Base Name*: the name used in the css skin file. For easy of use, its the same component name but replace `|` by `*`.
  * *Properties*: The property in what add default css selector. For easy of use, its name generally is the same css property name of the component minus `Class` suffix (styleClass --> `::style`).
  * *Extends*: The global selectors that inherits css styling attributes. The words in italic are attributes defined. If you found a selector with a parentesis, it denotes that this selector apply for this property.

Some components use the classes p_AFDisabled and  p_AFReadonly inside :style property.

== JSF HTML Skin Selectors ==

|| *Component*     || *Selector Base Name* || *Properties* || *Extends* ||
|| h:commandButton || h|commandButton   || ::style   ||`AFDefaultFont, p_AFDisabled, p_AFReadonly` || 
|| h:commandLink   || h|commandLink     || ::style   ||`AFDefaultFont, AFLinkForeground(::style:link), AFActiveLinkForeground(::style:active), AFVisitedLinkForeground(::style:visited)`  || 
|| h:dataTable || h|datatable || ::style, ::footer, ::header, ::row|| _border-collapse:collapse_ || 
|| h:form   || h|form     || ::style   || ||
|| h:graphicImage   || h|graphicImage     || ::style || ||
|| h:inputSecret   || h|inputSecret     || ::style, ::required   || `AFFormControlContent, p_AFDisabled, p_AFReadonly, AFRequiredContent(::required)`||
|| h:inputText   || h|inputText     || ::style, ::required   || `AFFormControlContent, p_AFDisabled, p_AFReadonly, AFRequiredContent(::required)`||
|| h:inputTextarea   || h|inputTextarea     || ::style, ::required   || `AFFormControlContent, p_AFDisabled, p_AFReadonly, AFRequiredContent(::required)`||
|| h:message || h|message || ::style, ::fatal, ::info, ::error, ::warn || `AFDefaultFont(All properties), AFVeryDarkForeground(::style), .AFHeaderLevelOne(::error), AFErrorTextForeground(::error), AFDarkForeground(::info), MessageBoxMargin(::info) `||
|| h:messages || h|messages || ::style, ::fatal, ::info, ::error, ::warn || `AFDefaultFont(All properties), AFVeryDarkForeground(::style), .AFHeaderLevelOne(::error), AFErrorTextForeground(::error), AFDarkForeground(::info), MessageBoxMargin(::info) `||
|| h:outputLabel || h|outputLabel || ::style, ::disabled, ::required  ||`AFLabel(::style), AFRequiredLabel(::disabled), AFLabelDisabled(::required) `||
|| h:outputLink   || h|outputLink     || ::style   ||`AFDefaultFont, AFLinkForeground(::style:link), AFActiveLinkForeground(::style:active), AFVisitedLinkForeground(::style:visited)`  ||
|| h:outputText    || h|outputText      || ::style  ||`AFDefaultFont, AFTextForeground`||
|| h:panelGrid   || h|panelGrid     || ::style, ::footer, ::header, ::row || `AFDefaultFont` ||
|| h:panelGroup   || h|panelGroup     || ::style   || `AFDefaultFont` ||
|| h:selectBooleanCheckbox   || h|selectBooleanCheckbox || ::style, ::required   || `AFFormControlContent, p_AFDisabled, p_AFReadonly, AFRequiredContent(::required)`||
|| h:selectManyCheckbox   || h|selectManyCheckbox || ::style, ::required   || `AFFormControlContent, p_AFDisabled, p_AFReadonly, AFRequiredContent(::required)`||
|| h:selectManyListbox   || h|selectManyListbox || ::style, ::required   || `AFFormControlContent, p_AFDisabled, p_AFReadonly, AFRequiredContent(::required)`||
|| h:selectManyMenu   || h|selectManyMenu || ::style, ::required   || `AFFormControlContent, p_AFDisabled, p_AFReadonly, AFRequiredContent(::required)`||
|| h:selectOneListbox   || h|selectOneListbox || ::style, ::required   || `AFFormControlContent, p_AFDisabled, p_AFReadonly, AFRequiredContent(::required)`||
|| h:selectOneMenu   || h|selectOneMenu || ::style, ::required   || `AFFormControlContent, p_AFDisabled, p_AFReadonly, AFRequiredContent(::required)`||
|| h:selectOneRadio   || h|selectOneRadio || ::style, ::required   || `AFFormControlContent, p_AFDisabled, p_AFReadonly, AFRequiredContent(::required)`||

Notes:

1. h:graphicImage can load images or icons referenced in a css skin file using selectors ending with -icon or -icon:rtl like this:

In CSS skin file:

{{{
.xxx-icon
{
  content:url(/images/logo_mini.jpg);	
}
}}}

In JSP or JSPX file:

{{{
<h:graphicImage url="xxx-icon"/>
}}}

2. h|outputLabel try to look the component referenced by `for` attribute, if this component has attributes disabled or readonly set to true, it apply ::disabled and
::readonly styles to styleClass attribute.

== Tomahawk Extended HTML Selectors ==

This components are direct extensions of JSF HTML component library. In general, some components here have user and role support.

|| *Component*     || *Selector Base Name* || *Properties* || *Extends* ||
|| t:commandButton || t|commandButton   || ::style   ||`AFDefaultFont, p_AFDisabled, p_AFReadonly` || 
|| t:commandLink   || t|commandLink     || ::style   ||`AFDefaultFont, AFLinkForeground(::style:link), AFActiveLinkForeground(::style:active), AFVisitedLinkForeground(::style:visited)`  || 
|| t:dataTable || t|datatable || ::style, ::footer, ::header, ::row, ::rowGroup|| _border-collapse:collapse_ || 
|| t:graphicImage   || t|graphicImage     || ::style || ||
|| t:inputSecret   || t|inputSecret     || ::style, ::required, ::displayValueOnly || `AFFormControlContent, p_AFDisabled, p_AFReadonly, AFRequiredContent(::required)`||
|| t:inputText   || t|inputText     || ::style, ::required, ::displayValueOnly   || `AFFormControlContent, p_AFDisabled, p_AFReadonly, AFRequiredContent(::required)`||
|| t:inputTextarea   || t|inputTextarea  || ::style, ::required, ::displayValueOnly   || `AFFormControlContent, p_AFDisabled, p_AFReadonly, AFRequiredContent(::required)`||
|| t:message || t|message || ::style, ::fatal, ::info, ::error, ::warn || `AFDefaultFont(All properties), AFVeryDarkForeground(::style), .AFHeaderLevelOne(::error), AFErrorTextForeground(::error), AFDarkForeground(::info), MessageBoxMargin(::info) `||
|| t:messages || t|messages || ::style, ::fatal, ::info, ::error, ::warn || `AFDefaultFont(All properties), AFVeryDarkForeground(::style), .AFHeaderLevelOne(::error), AFErrorTextForeground(::error), AFDarkForeground(::info), MessageBoxMargin(::info) `||
|| t:outputLabel || t|outputLabel || ::style, ::disabled, ::required  ||`AFLabel(::style), AFRequiredLabel(::disabled), AFLabelDisabled(::required) `||
|| t:outputLink   || t|outputLink     || ::style   ||`AFDefaultFont, AFLinkForeground(::style:link), AFActiveLinkForeground(::style:active), AFVisitedLinkForeground(::style:visited)`  ||
|| t:outputText    || t|outputText      || ::style  ||`AFDefaultFont, AFTextForeground`||
|| t:panelGrid   || t|panelGrid     || ::style, ::footer, ::header, ::row || `AFDefaultFont` ||
|| t:panelGroup   || t|panelGroup     || ::style   || `AFDefaultFont` ||
|| t:selectBooleanCheckbox   || t|selectBooleanCheckbox || ::style, ::required, ::displayValueOnly   || `AFFormControlContent, p_AFDisabled, p_AFReadonly, AFRequiredContent(::required)`||
|| t:selectManyCheckbox   || t|selectManyCheckbox || ::style, ::required, ::displayValueOnly   || `AFFormControlContent, p_AFDisabled, p_AFReadonly, AFRequiredContent(::required)`||
|| t:selectManyListbox   || t|selectManyListbox || ::style, ::required, ::displayValueOnly   || `AFFormControlContent, p_AFDisabled, p_AFReadonly, AFRequiredContent(::required)`||
|| t:selectManyMenu   || t|selectManyMenu || ::style, ::required, ::displayValueOnly   || `AFFormControlContent, p_AFDisabled, p_AFReadonly, AFRequiredContent(::required)`||
|| t:selectOneListbox   || t|selectOneListbox || ::style, ::required, ::displayValueOnly   || `AFFormControlContent, p_AFDisabled, p_AFReadonly, AFRequiredContent(::required)`||
|| t:selectOneMenu   || t|selectOneMenu || ::style, ::required, ::displayValueOnly   || `AFFormControlContent, p_AFDisabled, p_AFReadonly, AFRequiredContent(::required)`||
|| t:selectOneRadio   || t|selectOneRadio || ::style, ::required, ::displayValueOnly   || `AFFormControlContent, p_AFDisabled, p_AFReadonly, AFRequiredContent(::required)`||

Notes:

1. t:graphicImage works the same as h:graphicImage.

2. t:outputLabel works the same as h:outputLabel.

== Tomahawk Custom Selectors ==

This components are contained in the package org.apache.myfaces.custom and are components contributed by developers.

|| *Component*     || *Selector Base Name* || *Properties* || *Extends* ||

