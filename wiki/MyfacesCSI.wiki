#summary Main page of this project.

= Introduction =

This project is made as part of a Google Summer of Code 2007.

The project has 3 main objectives:

1. Extends trinidad skins capabilities to non trinidad components (tomahawk of base jsf html component library).

2. Make a tutorial about how to use tiles or facelets + tomahawk.

3. Solve some issues of myfaces.

I made this pages for tasks of documenting the work done.

= Details =

== 1. Extends trinidad skins capabilities to non trinidad components ==

Actually, trinidad-1.0.1 supports combine other non trinidad components. Trinidad has a cool way to do skins, but if you don't use trinidad components, you can't use this feature. You have to define the style css classes in each page of each non trinidad component, but you can define the css classes inside trinidad css or xss file where you create your custom skin. 

Seeing that necessity, this project provide a way to add trinidad skins features to non trinidad components. 

=== Possible uses of this work ===

  # When you use non trinidad components with trinidad. 
  # When you have a project made with other component library (just html, tomahawk or sandbox components), and you want to add skins facilities.

=== Source code ===

The code is available on the svn of the project as the name of myfaces-skins.

It has two subprojects:

  # core: The main library. It works with trinidad-1.0.2-SNAPSHOT and tomahawk
  # examples: A copy of myfaces examples, with trinidad skin addition (made probes simpler and faster to me!!)

This project is released upon the Apache 2.0 license, and it will be donated to Apache Software Foundation after it is finished.

== Patches required to run ==

The code needs to apply some patches in order to fix some features in tomahawk and trinidad. I have posted these patches in jira of myfaces, but until the commiters of that project accept this changes, I provide this in /patches directory of the svn of this project.

The list of the patches needed are this:

  # patch1.patch: fix `HtmlCommandLinkRenderer.java` on trinidad-impl project (need to run <t:commandSortHeader>).
  # patch2.patch: fix `HtmlDataTable.java` on tomahawk (make <t:commandSortHeader> run good).
  # patch3.patch: fix `HtmlDataTable.java` on tomahawk (correct ClassCastException).
  # patch4.patch: fix pseudoclasses on trinidad (correct `CSSGenerationUtils`).
  # patch5.patch: fix `HtmlPanelNavigationMenu.java` on tomahawk (correct ClassCastException).
  # patchConstants6.patch: Add local constans to trinidad (modify `SkinCSSDocumentHandler.java`).

== Implementation details ==

Here is a class diagram from the core.

[http://myfaces-csi.googlecode.com/svn/trunk/myfaces-csi/images/classdiagram1.jpg]

The idea is simple. Apply decorator pattern on trinidad `CoreRenderKit` , creating a `SkinRenderKit` class , and create custom classes that extends from `SkinRenderer` that add skinning support for it (this class delegate the rendering task to proper Renderer).

== 2. Tutorial about how to use tiles or facelets + tomahawk ==

== 3. Solve some issues of myfaces ==