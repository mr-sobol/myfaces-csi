<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/j2ee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
	version="2.4">

	<description>debug web.xml</description>

	<context-param>
    	 <param-name>org.jboss.jbossfaces.WAR_BUNDLES_JSF_IMPL</param-name>
	     <param-value>true</param-value>
	</context-param> 
	
	<!-- Configure tomahawk taglib -->
	<context-param>
		<param-name>facelets.LIBRARIES</param-name>
		<param-value>/WEB-INF/tomahawk.taglib.xml</param-value>
	</context-param>

	<!-- Use Documents Saved as *.xhtml -->
	<context-param>
		<param-name>javax.faces.DEFAULT_SUFFIX</param-name>
		<param-value>.xhtml</param-value>
	</context-param>

	<!-- Special Debug Output for Development -->
	<context-param>
		<param-name>facelets.DEVELOPMENT</param-name>
		<param-value>true</param-value>
	</context-param>
	
	
	<context-param>
		<description>
			Comma separated list of URIs of (additional) faces config
			files. (e.g. /WEB-INF/my-config.xml) See JSF 1.0 PRD2,
			10.3.2 Attention: You do not need to put
			/WEB-INF/faces-config.xml in here.
		</description>
		<param-name>javax.faces.CONFIG_FILES</param-name>
		<param-value>/WEB-INF/examples-config.xml</param-value>
	</context-param>

	<context-param>
		<description>
			State saving method: "client" or "server" (= default) See
			JSF Specification 2.5.3
		</description>
		<param-name>javax.faces.STATE_SAVING_METHOD</param-name>
		<param-value>client</param-value>
	</context-param>

	<!-- Trinidad by default uses an optimized client-side state saving
		mechanism. To disable that, uncomment the following -->
	<!--context-param>
		<param-name>org.apache.myfaces.trinidad.CLIENT_STATE_METHOD</param-name>
		<param-value>all</param-value>
		</context-param-->

	<!-- Trinidad also supports an optimized strategy for caching some
		view state at an application level, which significantly improves
		scalability.  However, it makes it harder to develop (updates to
		pages will not be noticed until the server is restarted), and in
		some rare cases cannot be used for some pages (see Trinidad
		documentation for more information) -->
	<context-param>
		<param-name>
			org.apache.myfaces.trinidad.USE_APPLICATION_VIEW_CACHE
		</param-name>
		<param-value>false</param-value>
	</context-param>

	<!-- If this parameter is enabled, Trinidad will automatically
		check the modification date of your JSPs, and discard saved
		state when they change;  this makes development easier,
		but adds overhead that should be avoided when your application
		is deployed -->
	<context-param>
		<param-name>
			org.apache.myfaces.trinidad.CHECK_FILE_MODIFICATION
		</param-name>
		<param-value>true</param-value>
	</context-param>

	<!-- Enables Change Persistence at a session scope.  By default,
		Change Persistence is entirely disabled. The ChangeManager is
		an API, which can persist component modifications (like,
		is a showDetail or tree expanded or collapsed). For providing
		a custom Change Persistence implementation inherit from the 
		Trinidad API's ChangeManager class. As the value you have 
		to use the fullqualified class name. -->
	<context-param>
		<param-name>
			org.apache.myfaces.trinidad.CHANGE_PERSISTENCE
		</param-name>
		<param-value>session</param-value>
	</context-param>

	<filter>
		<filter-name>trinidad</filter-name>
		<filter-class>
			org.apache.myfaces.trinidad.webapp.TrinidadFilter
		</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>trinidad</filter-name>
		<servlet-name>Faces Servlet</servlet-name>
	</filter-mapping>

	<listener>
		<listener-class>
			org.apache.myfaces.webapp.StartupServletContextListener
		</listener-class>
	</listener>

	<servlet>
		<servlet-name>Faces Servlet</servlet-name>
		<servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>Faces Servlet</servlet-name>
		<url-pattern>/faces/*</url-pattern>
	</servlet-mapping>

	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>

	<!-- resource loader servlet -->
	<servlet>
		<servlet-name>resources</servlet-name>
		<servlet-class>
			org.apache.myfaces.trinidad.webapp.ResourceServlet
		</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>resources</servlet-name>
		<url-pattern>/adf/*</url-pattern>
	</servlet-mapping>
	
</web-app>
