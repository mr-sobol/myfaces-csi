<?xml version="1.0"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.
	   
-->
<schema elementFormDefault="qualified" targetNamespace="http://myfaces.apache.org/uix/config"
  xmlns="http://www.w3.org/2001/XMLSchema"
  xmlns:schema="http://www.w3.org/2001/XMLSchema"
  xmlns:html="http://www.w3.org/TR/REC-html40"
  xmlns:config="http://myfaces.apache.org/uix/config"
  xmlns:cabotool="http://myfaces.apache.org/trinidad/cabo/tool"
  xmlns:md="http://myfaces.apache.org/trinidad/xml/metadata">
  <annotation>
    <appinfo>
      <md:grammarMetadata>
        <md:displayNameKey>DISPLAY_NAME</md:displayNameKey>
      </md:grammarMetadata>
    </appinfo>
  </annotation>
  <element name="configurations">
    <annotation>
      <documentation>
        <cabotool:summary>
          The configurations element is the root element of all uix-config.xml
          files.
        </cabotool:summary>
      </documentation>
    </annotation>

    <complexType>
      <sequence>
        <element ref="config:application-configuration"
                 minOccurs="0" maxOccurs="1">
          <annotation>
            <documentation>The application-configuration element defines
application-level properties global to all UIX code in this web
application.
            </documentation>
          </annotation>
        </element>

        <element ref="config:default-configuration"
                 minOccurs="0" maxOccurs="1">
          <annotation>
            <documentation>The &lt;default-configuration&gt; element defines
a default set of properties.  Unlike &lt;application-configuration&gt;,
these properties can be overridden (with &lt;configuration&gt; elements).
            </documentation>
          </annotation>
        </element>

        <element ref="config:configuration"
                 minOccurs="0" maxOccurs="unbounded">
          <annotation>
            <documentation>The &lt;configuration&gt; element defines
a set of properties that override &lt;default-configuration&gt;.
            </documentation>
          </annotation>
        </element>
      </sequence>
    </complexType>
  </element>


  <element name="application-configuration">
    <annotation>
      <documentation>
        <cabotool:summary>
            The application-configuration element defines
application-level properties global to all UIX code in this web
application.
        </cabotool:summary>
      </documentation>
    </annotation>

    <complexType>
      <sequence>
        <element name="uix-path" type="string"
                 minOccurs="0" maxOccurs="1">
          <annotation>
            <documentation>The uix-path element defines a path
to UIX files loaded by the system.  It may be global or relative
to the current web application root.
            </documentation>
          </annotation>
        </element>

        <element name="check-images-modified" type="boolean" minOccurs="0">
          <annotation>
            <documentation>
              Key that reports whether image file modification dates should
              be checked or ignored.  Also used to decide whether to
              check that files in the image cache still exist.
            </documentation>
          </annotation>
        </element>

        <element name="check-styles-modified" type="boolean" minOccurs="0">
          <annotation>
            <documentation>
              Key that reports whether style file modification dates should
              be checked or ignored.  Also used to decide whether to
              check that files in the style cache still exist.
            </documentation>
          </annotation>
        </element>

        <element name="check-modified" type="boolean"
                 minOccurs="0" maxOccurs="1">
          <annotation>
            <documentation>The check-modified element affects whether
UIX will check the modification date of UIX files.
            </documentation>
          </annotation>
        </element>

        <element name="display-parse-errors" type="boolean"
                 minOccurs="0" maxOccurs="1">
          <annotation>
            <documentation>The display-parse-errors element affects how
UIX will respond to problems parsing UIX files.  When set to "true",
UIX will display a cleanly formatted error page.  When set to "false",
it will log any errors encountered but display whatever portions of
the page successfully parsed.
            </documentation>
          </annotation>
        </element>

        <element name="default-expression-language" type="string"
                 minOccurs="0" maxOccurs="1">
          <annotation>
            <documentation>The default-expression-language element
defines the default syntax to use for expression attribute values in
UIX.  The default value is data, which is indentical to the binding
syntax used by previous versions of UIX.  Also, the value el is also
supported, to use the Expression Language syntax by default instead.
            </documentation>
          </annotation>
        </element>

        <element name="lenient-date-formats" type="boolean"
                 minOccurs="0" maxOccurs="1">
          <annotation>
            <documentation>The lenient-date-formats element affects whether
date formatting should be lenient.  This can also be set from Java code using
org.apache.myfaces.trinidadinternal.share.nls.MutableDateFormatContext@setLenient.  When leniency
is activated, date fields will allow some formats that do not exactly match
the requested server-side format (but have an unambiguous interpretation).
While client-side code will attempt to fix up fields, server-side code
should never rely on this, and must accept the same set of formats.
Consequently, this feature defaults off at this time.  (Note that this
definition of leniency does not match the java.text.DateFormat definition,
which allows out-of-range days of the month.)
            </documentation>
          </annotation>
        </element>

        <element name="debug-indent-output" type="boolean"
                 minOccurs="0" maxOccurs="1">
          <annotation>
            <documentation>The debug-indent-output element affects
whether output should be pretty-printed.  This is
only used in debug mode, when it defaults to true.

            </documentation>
          </annotation>
        </element>

        <element name="debug-flush-on-end-element" type="boolean"
                 minOccurs="0" maxOccurs="1">
          <annotation>
            <documentation>The debug-flush-on-end-element element affects
whether output should automatically be flushed every time an element ends.
This can make debugging easier, as exceptions can be more obviously
associated with the location of the problem, but slows performance.
whether output should be pretty-printed.  This is only used in debug mode,
when it defaults to false.
            </documentation>
          </annotation>
        </element>

        <element name="debug-log-to-console" type="boolean"
                 minOccurs="0" maxOccurs="1">
          <annotation>
            <documentation>The debug-log-to-console element affects
whether logged information should be sent to the console as well as the
standard servlet log.  This is only used in debug mode, when it defaults
to true.
            </documentation>
          </annotation>
        </element>

        <element name="debug-log-request-parameters" type="boolean"
                 minOccurs="0" maxOccurs="1">
          <annotation>
            <documentation>The debug-log-request-parameters element affects
whether  the parameters for each request should be logged.  This is only
used in debug mode, when it defaults to true.
            </documentation>
          </annotation>
        </element>

        <element name="debug-log-request-timing" type="boolean"
                 minOccurs="0" maxOccurs="1">
          <annotation>
            <documentation>The debug-log-request-timing element affects
whether timing information for each request should
be logged.  This is only used in debug mode, when it defaults to false.
            </documentation>
          </annotation>
        </element>

        <element name="debug-partial-responses" type="boolean"
                 minOccurs="0" maxOccurs="1">
          <annotation>
            <documentation>The debug-partial-responses element controls
whether the contents that are generated for each partial page response
should be displayed for debugging purposes.  When set to true, the iframe
which is used to send partial page requests is displayed at the top of the
page.  The default value is false, in which case the iframe is not visible.
The debug-partial-responses value is only honored in debug mode.
            </documentation>
          </annotation>
        </element>


        <element name="debug-annotate-parsed-xml" type="boolean"
                 minOccurs="0" maxOccurs="1">
          <annotation>
            <documentation>The debug-partial-responses element controls
whether the parsing results of uiXML files should be annotated with line
and column numbers, providing for improved error reporting at runtime.
The debug-annotate-parsed-xml value is only honored in debug mode.
            </documentation>
          </annotation>
        </element>

        <element name="ui-extensions"
                 minOccurs="0" maxOccurs="1">
          <annotation>
            <documentation>The ui-extensions element allows the automatic
registration of both UIExtension implementations and template libraries.
            </documentation>
          </annotation>
          <complexType>
            <sequence>
              <element name="extension-class" type="string"
                       minOccurs="0" maxOccurs="unbounded">
                <annotation>
                  <documentation>The extension-class element registers
a UIExtension implementation.  It must contain the full Java class
name of a class that both implements the UIExtension interface and
offers a zero-argument constructor.
                  </documentation>
                  <appinfo>
                    <md:attributeMetadata>
                      <md:propertyEditor>JAVACLASSNAME</md:propertyEditor>
                    </md:attributeMetadata>
                  </appinfo>
                </annotation>
              </element>

              <element name="template-library" type="string"
                       minOccurs="0" maxOccurs="unbounded">
                <annotation>
                  <documentation>The template-library element registers
a UIX template library file.  It must contain either a full path
or relative path to a UIX file that defines either a single template
or a template library (that is, a .uit file).
                  </documentation>
                </annotation>
              </element>
            </sequence>
          </complexType>
        </element>

        <element name="disable-installables-versioning" type="boolean"
                 minOccurs="0" maxOccurs="1">
          <annotation>
            <documentation>
The disable-installables-versioning element controls whether
version identifiers are included in UIX installable resource file names.
UIX installable resource files such as JavaScript libraries and style
sheets may be modified between UIX releases.  In order to ensure that
browsers pick up the latest versions of these files after upgrading to a
new version of UIX, UIX automatically inserts version identifiers in
the names of any files which may have changed.  Clients can disable this
feature by setting the disable-installables-versioning to true.
However, clients that disable UIX installable file versioning
are encouraged to use some other mechanism
(such as changing the base URI for the installable files or for the
entire web application) to ensure that
browsers pick up new versions of these files when upgrading UIX.
            </documentation>
          </annotation>
        </element>

        <element name="disable-uix-cookie" type="boolean"
                 minOccurs="0" maxOccurs="1">
          <annotation>
            <documentation>
The disable-uix-cookie element controls whether UIX can automatically
generate a cookie on behalf of the user.  UIX uses a cookie to communicate
information such as accessibility information and time zones between
a user's machines and multiple servers.  The cookie is not required
for UIX, but may allow UIX to function better;  for example, it allows
UIX to automatically derive the user's time zone.  Developers that
need to disallow cookies can use this option to prevent UIX from
automatically creating the cookie.  Developers can still access
a pre-existing UIX cookie - or explicitly create the cookie - via
the UIXCookie API.
            </documentation>
          </annotation>
        </element>

        <element name="disable-no-cache-headers" type="boolean"
                 minOccurs="0" maxOccurs="1">
          <annotation>
            <documentation>
The disable-no-cache-headers element controls whether the UIX
Controller will generate HTTP headers that disable caching on its
own.  By default, caching will be disabled for pages that are
the result of an event or a server-side error.  Clients can disable this
feature by setting the disable-no-cache-headers to true.
            </documentation>
          </annotation>
        </element>

        <element name="uix-request-listeners"
                 minOccurs="0" maxOccurs="1">
          <annotation>
            <documentation>The uix-request-listeners element allows the
automatic registration of UIXRequestListeners.
            </documentation>
          </annotation>
          <complexType>
            <sequence>
              <element name="uix-request-listener-class" type="string"
                       minOccurs="0" maxOccurs="unbounded">
                <annotation>
                  <documentation>The uix-request-listener-class element
adds a UIXRequestListener.  It must contain the full Java class
name of a class that both implements the UIXRequestListener interface and
offers a zero-argument constructor.
                  </documentation>
                  <appinfo>
                    <md:attributeMetadata>
                      <md:propertyEditor>JAVACLASSNAME</md:propertyEditor>
                    </md:attributeMetadata>
                  </appinfo>
                </annotation>
              </element>
            </sequence>
          </complexType>
        </element>

        <element name="look-and-feels" minOccurs="0">
          <annotation>
            <documentation>
            The look-and-feels element allows custom look and
            feels to be registered for use with UIX.
            </documentation>
          </annotation>
          <complexType>
            <sequence>
              <element name="look-and-feel-config"
                       minOccurs="0" maxOccurs="unbounded"
                       type="string">
                <annotation>
                  <documentation>
                  The look-and-feel-config element registers a
                  single look and feel defined by a look and
                  feel configuration file.  The path to the
                  look and feel configuration file relative to
                  the servlet context root is specified as the
                  contents of this element.  For example, if
                  the look and feel file is defined in a
                  "custom-laf.xml" file under the WEB-INF
                  directory, the path would be "WEB-INF/custom-laf.xml".

                  </documentation>
                </annotation>
              </element>
            </sequence>
          </complexType>
        </element>

      </sequence>

      <attribute name="debug" type="boolean" default="false">
        <annotation>
          <documentation>Sets whether UIX should enable debugging
features.  This flag must be set to "true" before any of the
debugging elements are used.
          </documentation>
        </annotation>
      </attribute>
    </complexType>
  </element>


  <element name="default-configuration" type="config:default-configurationType">
    <annotation>
      <documentation>
        <cabotool:summary>The &lt;default-configuration&gt; element defines
a default set of properties.  Unlike &lt;application-configuration&gt;,
these properties can be overridden (with &lt;configuration&gt; elements).
        </cabotool:summary>
      </documentation>
    </annotation>
  </element>

  <element name="configuration">
    <annotation>
      <documentation>
        <cabotool:summary>The &lt;configuration&gt; element defines
a set of properties that override &lt;default-configuration&gt;.  This
will define the default Configuration object used by UIX.
        </cabotool:summary>
      </documentation>
    </annotation>

    <complexType>
      <complexContent>
        <extension base="config:default-configurationType">
          <attribute name="name" type="string" use="required">
            <annotation>
              <documentation>The name of the configuration.  This
mandatory attribute will be used to choose a Configuration object
at runtime.
              </documentation>
            </annotation>
          </attribute>
        </extension>
      </complexContent>
    </complexType>
  </element>

  <complexType name="default-configurationType">
    <all>
      <element name="base-directory" type="config:pathType"
               minOccurs="0" maxOccurs="1">
        <annotation>
          <documentation>The base-directory element defines a path
to the base directory for UIX resources.
          </documentation>
        </annotation>
      </element>

      <element name="images-directory" type="config:pathType"
               minOccurs="0" maxOccurs="1">
        <annotation>
          <documentation>The images-directory element defines a path
to the directory for UIX images.
          </documentation>
        </annotation>
      </element>

      <element name="images-cache-directory" type="config:pathType"
               minOccurs="0" maxOccurs="1">
        <annotation>
          <documentation>The images-cache-directory element defines a path
to the directory for dynamically generated UIX images.
          </documentation>
        </annotation>
      </element>

      <element name="styles-directory" type="config:pathType"
               minOccurs="0" maxOccurs="1">
        <annotation>
          <documentation>The styles-directory element defines a path
to the directory for UIX Styles files (that is, .xss files).
          </documentation>
        </annotation>
      </element>

      <element name="styles-cache-directory" type="config:pathType"
               minOccurs="0" maxOccurs="1">
        <annotation>
          <documentation>The styles-cache-directory element defines a path
to the directory for dynamically generated UIX style files.
          </documentation>
        </annotation>
      </element>

      <element name="jslibs-directory" type="config:pathType"
               minOccurs="0" maxOccurs="1">
        <annotation>
          <documentation>The jslibs-directory element defines a path
to the directory for UIX Javascript files.
          </documentation>
        </annotation>
      </element>

      <element name="jsps-directory"
               minOccurs="0" maxOccurs="1">
        <annotation>
          <documentation>The jsps-directory element defines a path
to the directory for UIX JSPs.  Unlike other directories, the UIX JSPs
must be stored locally within a web application.
          </documentation>
        </annotation>
        <complexType>
          <sequence>
            <element name="context-uri" type="string" minOccurs="1" maxOccurs="1">
              <annotation>
                <documentation>The context-uri element defines a context-relative URI
to a location.  The URI is relative to the current web application.
                </documentation>
              </annotation>
            </element>
          </sequence>
        </complexType>
      </element>

      <element name="look-and-feel" type="string" minOccurs="0">
        <annotation>
          <documentation>The look-and-feel element defines the name of the
preferred look-and-feel.
          </documentation>
        </annotation>
      </element>

      <element name="style-sheet-name" type="string" minOccurs="0">
        <annotation>
          <documentation>The style-sheet-name element defines the name of the
UIX Styles (.xss) file to be used.
          </documentation>
        </annotation>
      </element>

      <element name="accessibility-mode"
               type="config:accessibilityType" minOccurs="0">
        <annotation>
          <documentation>The accessibility-mode element defines what
level of accessibility support should be generated.  Acceptable values
are "default" (the default, of course), "inaccessible", which turns off
accessibility features but improves page size, and "screenReader", which
enhances accessibility to optimize usability with screen readers
(but may degrade appearance in standard browsers).
          </documentation>
        </annotation>
      </element>

      <element name="image-servlet-url" type="anyURI" minOccurs="0">
        <annotation>
          <documentation>The image-servlet-url element contains the URL
to a UIX ImageServlet server.  This server will be used for all dynamic
generation of images (instead of attempting to generate images locally).
          </documentation>
        </annotation>
      </element>

      <element name="headless" type="boolean" minOccurs="0">
        <annotation>
          <documentation>The headless element defines whether headless
rendering should be used.  When set to "true", UIX will not attempt
to dynamically generate images.
          </documentation>
        </annotation>
      </element>

      <element name="disable-content-compression" type="boolean" minOccurs="0">
        <annotation>
          <documentation>The disable-content-compression element defines
whether UIX should attempt to compress output by, for example, substituting
shortened style names.  (This does not refer to gzip'ing the output.)  This
feature is on by default, but it can make debugging more difficult.
          </documentation>
        </annotation>
      </element>

      <element name="disable-partial-rendering" type="boolean" minOccurs="0">
        <annotation>
          <documentation>The disable-partial-rendering element defines
whether Partial Page Rendering (PPR) is enabled.  PPR is enabled by default.
          </documentation>
        </annotation>
      </element>

      <element name="help-provider" minOccurs="0">
        <annotation>
          <documentation>The help-provider element allows configuration
of a help provider.
          </documentation>
        </annotation>
        <complexType>
          <sequence>
            <element name="ohw-servlet-url" minOccurs="1"
                     maxOccurs="unbounded">
              <annotation>
                <documentation>The ohw-servlet-url must contain an URL
that points to an installation of Oracle Help for the Web (OHW).
                </documentation>
              </annotation>
              <complexType>
                <simpleContent>
                  <extension base="anyURI">
                    <attribute name="locale" type="string">
                      <annotation>
                        <documentation>An optional attribute specifying
an OHW installation for a specific locale.  The string should be in
IANA format, like "ja" or "ja-JP".  There must be at least one instance
of the &lt;ohw-servlet-url&gt; element that does not specify this
attribute (used as the default).
                        </documentation>
                      </annotation>
                    </attribute>
                  </extension>
                </simpleContent>
              </complexType>
            </element>
          </sequence>
        </complexType>
      </element>

      <element name="supported-locales" minOccurs="0">
        <annotation>
          <documentation>The supported-locales element defines the
list of locales that are supported by the application.
          </documentation>
        </annotation>
        <complexType>
          <sequence>
            <element name="default-locale" minOccurs="1" type="string">
              <annotation>
                <documentation>The default-locale element contains
an ISO locale defintion (e.g, "en", "ja-JP").  This locale will
be used if the locale requested by the user does not match any
supported locale.
                </documentation>
              </annotation>
            </element>

            <element name="supported-locale" minOccurs="0" maxOccurs="unbounded"
                     type="string">
              <annotation>
                <documentation>A supported-locale element contains
an ISO locale definition (e.g, "en", "ja-JP").  This locale will
be used if the locale requested by the user at least partially
matches this locale.
                </documentation>
              </annotation>
            </element>
          </sequence>
        </complexType>
      </element>

    </all>
  </complexType>

  <simpleType name="accessibilityType">
    <restriction base="string">
      <enumeration value="default">
        <annotation>
          <documentation>The default value, indicating that accessibility
support should be active.
          </documentation>
        </annotation>
      </enumeration>

      <enumeration value="inaccessible">
        <annotation>
          <documentation>A value indicating that accessibility
support should be disabled, which improves page size and performance.
          </documentation>
        </annotation>
      </enumeration>

      <enumeration value="screenReader">
        <annotation>
          <documentation>A value indicating that accessibility
support should be enhanced to optimize usability with screen readers
(but may degrade appearance in standard browsers).
          </documentation>
        </annotation>
      </enumeration>
    </restriction>
  </simpleType>

  <complexType name="pathType">
    <choice>
      <sequence>
        <element name="full-uri" type="anyURI" minOccurs="1" maxOccurs="1">
          <annotation>
            <documentation>The full-uri element defines a full URI
to a location.
            </documentation>
          </annotation>
        </element>
        <element name="full-path" type="string" minOccurs="1" maxOccurs="1">
          <annotation>
            <documentation>The full-path element defines a full filesystem
path to a location.
            </documentation>
          </annotation>
        </element>
      </sequence>
      <element name="context-uri" type="anyURI">
        <annotation>
          <documentation>The context-uri element defines a context-relative URI
to a location.  The URI is relative to the current web application.
          </documentation>
        </annotation>
      </element>
    </choice>
  </complexType>
</schema>
